<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Refactoring.View">

    <SolidColorBrush x:Key="DefaultBackGround">#191817</SolidColorBrush>
    <SolidColorBrush x:Key="LightUpBackGround">#302F2E</SolidColorBrush>
    <SolidColorBrush x:Key="StrongLightUpBackGR">#FF686868</SolidColorBrush>
    <SolidColorBrush x:Key="ListViewBackGround">#FF2D2D30</SolidColorBrush>
    <SolidColorBrush x:Key="RedExit">#C1292E</SolidColorBrush>
    <SolidColorBrush x:Key="FadedBlue">#235789</SolidColorBrush>
    <SolidColorBrush x:Key="FadedBlueMinus">#7F235789</SolidColorBrush>
    <!--По сути цвет шрифта-->
    <SolidColorBrush x:Key="FadedWhite">#FFE1E1E1</SolidColorBrush>

    <!--Подсветка при наведении и стили кнопок выход, свернуть, полный экран-->
    <Style x:Key="LightUp" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource DefaultBackGround}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightUpBackGround}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ExitButton" TargetType="{x:Type Button}">
        <Style.Resources>
            <ResourceDictionary>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="{StaticResource RedExit}"/>
                    <Setter Property="Height" Value="0.75"/>
                    <Setter Property="Width" Value="27"/>
                    <Setter Property="RadiusX" Value="0.5"/>
                    <Setter Property="RadiusY" Value="0.5"/>
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <RotateTransform Angle="45"/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Style="{StaticResource LightUp}">
                        <!--STYLE THERE-->
                        <Rectangle/>
                        <Rectangle>
                            <Rectangle.LayoutTransform>
                                <RotateTransform Angle="315"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FullSizeButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Style="{StaticResource LightUp}">
                        <Rectangle Stroke="{StaticResource FadedBlue}" StrokeThickness="1.5" Margin="5,5,5,5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MinimizeButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Style="{StaticResource LightUp}">
                        <!--is this the right choice to draw a button ??-->
                        <Line X1="7" X2="23"
                              Y1="15" Y2="15"
                              Stroke="{StaticResource FadedBlue}" StrokeThickness="1.5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Кнопка для перехода в корневую папку-->
    <Style x:Key="DirectoryButton" TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Resources\arrow-white.bmp"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="Resources\arrow-green.bmp"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Стиль для ListViewItem. Так как вариаций не нужно не использую Template Binding а просто ввожу значения -->
    <Style TargetType="{x:Type ListViewItem}" x:Key="ListItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels"   Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <!--Почему когда я здесь ставлю значение BackGround это вырубает триггер IsMouseOver ???-->
                    <Border Margin="1,0,0,1"  
                            HorizontalAlignment="Stretch" 
                            Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <!--Мега странная ошибка. Если попытаться сделать TemplateBinding здесь,
                                то напишет, что BackGround недопустим т.к такого имени типа нет в Archivator-->
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </Style>
                        </Border.Style>
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource FadedWhite}"></Setter>
    </Style>

    <!--Разделитель колонн + Gripper-->
    <Style x:Key="GridViewColumnHeaderGripper"
       TargetType="Thumb">
        <Setter Property="Width"
          Value="18" />
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль для заголовка (шапки) окна-->
    <Style x:Key="ColumnHeader"
       TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment"   Value="Center" />
        <Setter Property="Foreground"                 Value="{StaticResource FadedWhite}" />
        <Setter Property="Background"                 Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border x:Name="HeaderBorder"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="HeaderContent"
                              Margin="0,0,0,1"
                              RecognizesAccessKey="True"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                               HorizontalAlignment="Right"
                               Margin="0,0,-9,0"
                               Style="{StaticResource GridViewColumnHeaderGripper}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль для Скролла. Состоит из Thumb (элемент за который перетаскивают ), Кнопок, и самого скролла-->
    <Style x:Key="ScrollThumb" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="{StaticResource StrongLightUpBackGR}" 
                               RadiusX="4" RadiusY="4" 
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBackButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="ScrollBar" x:Key="VerticalScrollBar">
        <!--I Need Scroll in a Grid or smth like that-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.1*"></RowDefinition>
            </Grid.RowDefinitions>
            <!--BackGround-->
            <Border Background="#FF3E3E42" Grid.RowSpan="1"></Border>
            <Track x:Name="PART_Track"
                       Grid.Row="0"
                       IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBackButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollThumb}" Width="7"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBackButton}" 
                                  Command="ScrollBar.PageDownCommand"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate TargetType="ScrollBar" x:Key="HorizontalScrollBar">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <!--BackGround-->
            <Border Background="#FF3E3E42" Grid.ColumnSpan="1"></Border>
            <Track x:Name="PART_Track"
                       Grid.Row="0"
                       IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBackButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollThumb}" Height="7"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBackButton}" 
                                  Command="ScrollBar.PageDownCommand"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style TargetType="ScrollBar">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels"   Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>